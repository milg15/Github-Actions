name: deploy-to-staging-on-comment

on:
  issue_comment:
    types: [created]
    # Only run workflow if the comment contains the word '.deploy'
    # or if the comment contains the word '.lock' or '.unlock'
    # and the comment was made by the owner of the repository

permissions:
  pull-requests: write
  contents: write

jobs:
  lock-or-unlock:
    if: ${{ github.event.issue.pull_request && (contains(github.event.comment.body, '.lock') ||contains(github.event.comment.body, '.unlock')) }}
    runs-on: ubuntu-latest
    steps:
      # Lock or Unlock via a comment (ex: .lock or .unlock)
      - uses: github/lock@v2.0.1
        id: lock

      # Comment on the issue with the result of the lock action
      - uses: actions/github-script@v3
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: 'Issue by '
            })

  deploy-to-staging:
    runs-on: ubuntu-latest
    if: ${{ github.event.issue.pull_request && contains(github.event.comment.body, '.deploy') }}
    env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - uses: github/lock@v2.0.1
        id: lock
        with:
          mode: check

      - uses: xt0rted/pull-request-comment-branch@v2
        id: comment-branch

      - name: Show locked status
        run: |
            echo "Lock status: ${{ steps.lock.outputs.locked }}"
            echo "Locked branch: ${{ steps.lock.outputs.branch }}"

      - name: Exit if locked

        if: ${{ steps.lock.outputs.locked == 'true' }} && ${{ contains(steps.comment-branch.outputs.head_ref, steps.lock.outputs.branch) != 'true' }}
        run: |
          echo "Lock status: ${{ steps.lock.outputs.locked }}"
          echo "Locked branch: ${{ steps.lock.outputs.branch }}"
          echo "Branch name: ${{ steps.comment-branch.outputs.head_ref }}"
          exit 1

      - uses: khan/pull-request-comment-trigger@v1.1.0
        id: check
        with:
          trigger: ".deploy"
          reaction: rocket

      - name: Run deployment
        if: ${{ steps.check.outputs.triggered == 'true' }}
        uses: actions/github-script@v3
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: '/gcbrun'
            })
